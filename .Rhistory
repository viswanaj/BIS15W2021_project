selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y,fill="Country")) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Population","Recovered","Obesity","Deaths"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Population","Recovered","Obesity","Deaths"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(high_and_low_obesity,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood",
"Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops" "Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Population","Recovered","Obesity","Deaths"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(country_comparison,aes_string(x=input$x,y=input$y,fill="Country")) + geom_col()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
}
shinyApp(ui_1,server_1) session$onSessionEnded(stopApp)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
}
shinyApp(ui_1,server_1),session$onSessionEnded(stopApp)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
}session$onSessionEnded(stopApp)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
}
session$onSessionEnded(stopApp)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.)
kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths,na.rm=T)
kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths)
kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths)%>%
filter(across(c(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths),~!is.na(.x)))
kg_gen_not<-kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths)%>%
kg_gen_not<-kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Large Scale Diet to Covid Comparison"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)+theme(plot.title = element_text(hjust = 0.5))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)+theme(plot.title = element_text(hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)+theme(plot.title = element_text(hjust = 2))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
