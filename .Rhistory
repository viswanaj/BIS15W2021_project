})
}
session$onSessionEnded(stopApp)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.)
kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths,na.rm=T)
kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths)
kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths)%>%
filter(across(c(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths),~!is.na(.x)))
kg_gen_not<-kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths)%>%
kg_gen_not<-kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Large Scale Diet to Covid Comparison"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)+theme(plot.title = element_text(hjust = 0.5))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)+theme(plot.title = element_text(hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)+theme(plot.title = element_text(hjust = 2))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
if (!require("tidyverse")) install.packages('tidyverse')
if (!require("tidyverse")) install.packages('tidyverse')
library("tidyverse")
library("shiny")
library("shinydashboard")
library("janitor")
library("naniar")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(janitor)
food_data<-read.csv("food and covid data/Food_Supply_Quantity_kg_Data_general_notation.csv")
food_data
food_data %>%
group_by(Country) %>%
ggplot(aes(Obesity,Deaths))+geom_point()+geom_smooth(method = lm)
food_data %>%
group_by(Country) %>%
ggplot(aes(Vegetal.Products,Deaths))+geom_point()+geom_smooth(method = lm)
food_data %>%
group_by(Country) %>%
ggplot(aes(Meat,Deaths))+geom_point()+geom_smooth(method = lm)
food_data %>%
select(Alcoholic.Beverages, Country) %>%
arrange(desc(Alcoholic.Beverages))
food_data %>%
group_by(Country) %>%
ggplot(aes(Obesity,Deaths))+geom_point()+geom_smooth()
food_data %>%
select(Obesity,Country) %>%
arrange(desc(Obesity)) %>%
mutate(island=)
island_food_data<- food_data %>%
filter(Country== "Samoa"| Country=="United Kingdom"| Country=="Fiji" | Country=="Japan"| Country=="Australia"| Country=="New Zealand"| Country=="Kiribati"| Country=="Iceland"| Country=="Philippines") %>%
mutate(island= TRUE)
island_food_data
non_island_food_data<- food_data %>%
filter( Country!="Australia", Country!="Samoa", Country!="United Kingdom", Country!="New Zealand", Country!="Kiribati", Country!="Iceland", Country!="Philippines", Country!="Fiji", Country!="Japan" ) %>%
mutate(island= FALSE)
non_island_food_data
food_data %>%
filter(Obesity>37) %>%
select(Country, Confirmed, Deaths, Recovered)
island_food_complete <- rbind(non_island_food_data, island_food_data)
island_food_complete
island_food_complete %>%
select(Country, Undernourished) %>%
arrange(desc(Undernourished))
island_food_complete %>%
filter(Country!= "United Kingdom") %>%
ggplot(aes(Obesity,Deaths,color=island))+geom_point()+geom_smooth(method = lm)
island_food_complete %>%
ggplot(aes(Obesity,Deaths,color=island))+geom_point()+geom_smooth(method = lm)
well_nourished_countries<-food_data %>%
filter(Undernourished== "<2.5") %>%
cbind(2.5) %>%
mutate(Undernourished_numeric= mean(2.5)) %>%
select(!"2.5")
food_experiment<- food_data %>%
filter(Undernourished != "<2.5")
food_experiment<-food_experiment %>%
mutate(Undernourished_numeric=as.numeric(as.character(food_experiment$Undernourished)))
nourishment_complete <- rbind(food_experiment, well_nourished_countries)
nourishment_complete
is.numeric(nourishment_complete$Undernourished_numeric)
nourishment_complete <- nourishment_complete %>%
mutate(nourishment_catagory= case_when(Undernourished_numeric <=2.5 ~ "low",
Undernourished_numeric > 2.5 & Undernourished_numeric <= 15 ~ "medium",
Undernourished_numeric > 15 ~ "high"))
nourishment_complete
nourishment_complete %>%
ggplot(aes(Obesity, Deaths, color= nourishment_catagory))+geom_point()+geom_smooth(method = lm)
kg_gen_not<-read.csv("food and covid data/Food_Supply_Quantity_kg_Data_general_notation.csv")
summary(kg_gen_not)
names(high_and_low_obesity_recovery)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("Population","Recovered","Obesity","Deaths",'Recovery_to_death_ratio=Recovered/Deaths'),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Population","Recovered","Obesity","Deaths",'Recovery_to_death_ratio=Recovered/Deaths'),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(high_and_low_obesity_recovery,aes_string(x=input$x,y=input$y, color="Country")) + geom_point(size=10)+ theme_light(base_size = 18)#+theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)+theme(plot.title = element_text(hjust = 2))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
knitr::opts_chunk$set(echo = TRUE)
kg_gen_not%>%
select(Country,Obesity,Deaths)%>%
arrange(desc(Obesity))%>%
tail(10)%>%
ggplot(aes(x=Country,y=Obesity))+
geom_col()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))
library("tidyverse")
library("shiny")
library("shinydashboard")
library("janitor")
library("naniar")
library(tidyverse)
library(here)
library(janitor)
kg_gen_not<-read.csv("food and covid data/Food_Supply_Quantity_kg_Data_general_notation.csv")
kg_gen_not%>%
select(Country,Obesity,Deaths)%>%
arrange(desc(Obesity))%>%
tail(10)%>%
ggplot(aes(x=Country,y=Obesity))+
geom_col()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))
high_recovery_nations<-kg_gen_not%>%
filter(Country=="Mongolia"|Country== "United Arab Emirates"|Country=="Maldives"|Country=="Malaysia"|Country=="Thailand"|Country=="Iceland"|Country=="Sri Lanka"|Country=="Cote d'Ivoire"|Country=="Guinea"|Country=="Kuwait")
high_recovery_nations%>%
select(Obesity,Country,Confirmed,Deaths,Recovered)%>%
filter(Recovered!=0)%>%
filter(Deaths!=0)%>%
summarise(Country,Obesity,recovery_to_death_ratio=Recovered/Deaths)%>%
ggplot(aes(x=Obesity,y=recovery_to_death_ratio,fill=Country))+
geom_col()
#high obesity
kg_gen_not%>%
arrange(desc(Deaths))%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,recovery_to_death_ratio=Recovered/Deaths)%>%
head(10)
high_obesity<-kg_gen_not%>%
arrange(desc(Obesity))%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)%>%
head(10)
#low obesity
kg_gen_not%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
filter(Obesity!="NA")%>%
arrange(desc(Obesity))%>%
tail(10)
low_obesity_1<-kg_gen_not%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
filter(Confirmed!="NA"& Obesity!="NA" & Deaths!=0)%>%
arrange(desc(Obesity))%>%
tail(10)%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)
low_obesity_1
high_obesity
kg_gen_not%>%
arrange(desc(Deaths))%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity)%>%
head(10)%>%
ggplot(aes(x=Obesity,y=Deaths,fill=Country))+
geom_col()
#comparing low vs high obesity relative to covid death rate by countries
high_and_low_obesity_recovery<-rbind(low_obesity_1,high_obesity)
high_and_low_obesity_recovery
names(high_and_low_obesity_recovery)
kg_gen_not<-kg_gen_not%>%
summarise(Country,Alcoholic.Beverages,Animal.fats,Animal.Products,Aquatic.Products..Other,Cereals...Excluding.Beer,Eggs,Fish..Seafood,Fruits...Excluding.Wine,Meat,Milk...Excluding.Butter,Miscellaneous,Offals,Oilcrops,Pulses,Spices,Starchy.Roots,Stimulants,Sugar...Sweeteners,Sugar.Crops,Treenuts,Vegetable.Oils,Vegetables,Vegetal.Products,Obesity,Undernourished,Confirmed,Deaths,Recovered,Active,Population,Unit..all.except.Population.,Recovery_to_Death_Ratio=Recovered/Deaths)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population.","Recovery_to_Death_Ratio"),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population."),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)+theme(plot.title = element_text(hjust = 2))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Diet Observations"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population.","Recovery_to_Death_Ratio"),
selected = "Alcoholic.Beverages"),
selectInput("y","Select y variable",choices = c("Country","Alcoholic.Beverages","Animal.fats","Animal.Products","Aquatic.Products..Other","Cereals...Excluding.Beer","Eggs","Fish..Seafood","Fruits...Excluding.Wine","Meat","Milk...Excluding.Butter","Miscellaneous","Offals","Oilcrops","Pulses","Spices","Starchy.Roots","Stimulants","Sugar...Sweeteners","Sugar.Crops","Treenuts","Vegetable.Oils","Vegetables","Vegetal.Products","Obesity","Undernourished","Confirmed","Deaths","Recovered","Active","Population","Unit..all.except.Population.","Recovery_to_Death_Ratio"),
selected = "Deaths"),
box(title = "Diet Compared to COVID-19 Deaths", width = 15,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(kg_gen_not,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)+theme(plot.title = element_text(hjust = 2))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
