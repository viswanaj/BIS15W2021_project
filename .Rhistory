tail(10)
low_obesity_1<-kg_gen_not%>%
filter(kg_gen_not!="NA")%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
arrange(desc(Obesity))%>%
tail(10)
low_obesity_1
low_obesity_1<-kg_gen_not%>%
filter(kg_gen_not!="NA")%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
arrange(desc(Obesity))%>%
tail(10)
low_obesity_1
low_obesity_1<-kg_gen_not%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
filter(Confirmed!="NA")%>%
arrange(desc(Obesity))%>%
tail(10)
low_obesity_1
low_obesity_1<-kg_gen_not%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
filter(Confirmed!="NA"|Obesity!="NA")%>%
arrange(desc(Obesity))%>%
tail(10)
low_obesity_1
low_obesity_1<-kg_gen_not%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
filter(Confirmed!="NA"|Obesity!="NA")%>%
arrange(desc(Obesity))%>%
tail(10)
low_obesity_1
low_obesity_1<-kg_gen_not%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
filter(Confirmed!="NA"& Obesity!="NA")%>%
arrange(desc(Obesity))%>%
tail(10)
low_obesity_1
low_obesity_1<-kg_gen_not%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
filter(Confirmed!="NA"& Obesity!="NA")%>%
arrange(desc(Obesity))%>%
tail(10)%>%
summarise(Country,Confirmed,Recovered)
low_obesity_1
low_obesity_1<-kg_gen_not%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
filter(Confirmed!="NA"& Obesity!="NA")%>%
arrange(desc(Obesity))%>%
tail(10)%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)
low_obesity_1
low_obesity_1<-kg_gen_not%>%
select(Country,Confirmed,Recovered,Deaths,Obesity,Population)%>%
filter(Confirmed!="NA"& Obesity!="NA" & Deaths!=0)%>%
arrange(desc(Obesity))%>%
tail(10)%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)
low_obesity_1
#comparing low vs high obesity relative to covid death rate by countries
high_and_low_obesity_recovery<-rbind(low_obesity_1,high_obesity)
high_obesity
high_obesity<-kg_gen_not%>%
arrange(desc(Obesity))%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)%>%
head(10)
#comparing low vs high obesity relative to covid death rate by countries
high_and_low_obesity_recovery<-rbind(low_obesity_1,high_obesity)
high_and_low_obesity
#comparing low vs high obesity relative to covid death rate by countries
high_and_low_obesity_recovery<-rbind(low_obesity_1,high_obesity)
high_and_low_obesity
#comparing low vs high obesity relative to covid death rate by countries
high_and_low_obesity_recovery<-rbind(low_obesity_1,high_obesity)
high_and_low_obesity_recovery
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("Population","Recovered","Obesity","Deaths",'Recovery_to_death_ratio=Recovered/Deaths'),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Population","Recovered","Obesity","Deaths",'Recovery_to_death_ratio=Recovered/Deaths'),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(high_and_low_obesity_recovery,aes_string(x=input$x,y=input$y, color="Country")) + geom_point(size=10)+ theme_light(base_size = 18)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
kg_gen_not%>%
filter(Country=="Vietnam"|Country=="United States of America"|Country=="New Zealand")
three_country_comparison<-kg_gen_not%>%
filter(Country=="Vietnam"|Country=="United States of America"|Country=="New Zealand")
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Population","Recovered","Obesity","Deaths"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Population","Recovered","Obesity","Deaths"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(three_country_comparison,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(three_country_comparison,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Population","Recovered","Obesity","Deaths",'Recovery_to_death_ratio=Recovered/Deaths'),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Population","Recovered","Obesity","Deaths",'Recovery_to_death_ratio=Recovered/Deaths'),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(high_and_low_obesity,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
three_country_comparison<-kg_gen_not%>%
filter(Country=="Vietnam"|Country=="United States of America"|Country=="New Zealand")%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(high_and_low_obesity,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(three_country_comparison,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(three_country_comparison,aes_string(x=input$x,y=input$y)) + geom_col(size=4.5)+ theme_light(base_size = 18)+geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(three_country_comparison,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+ geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
View(three_country_comparison)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(three_country_comparison,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+ geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
country_comparison<-kg_gen_not%>%
filter(Country=="Vietnam"|Country=="United States of America"|Country=="New Zealand"|Country=="United Kingdom")%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)
country_comparison<-kg_gen_not%>%
filter(Country=="Vietnam"|Country=="United States of America"|Country=="New Zealand"|Country=="United Kingdom"|Country=="Italy")%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(three_country_comparison,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+ geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(country_comparison,aes_string(x=input$x,y=input$y)) + geom_point(size=4.5)+ theme_light(base_size = 18)+ geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(country_comparison,aes_string(x=input$x,y=input$y fill=country)) + geom_col(size=4.5)+ theme_light(base_size = 18)+ geom_smooth(method = lm)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(country_comparison,aes_string(x=input$x,y=input$y,fill=country)) + geom_col(size=4.5)+ theme_light(base_size = 18)+ geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(country_comparison,aes_string(x=input$x,y=input$y,fill="Country")) + geom_col(size=4.5)+ theme_light(base_size = 18)+ geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(country_comparison,aes_string(x=input$x,y=input$y,fill="Country")) + geom_col()+ theme_light(base_size = 18)+ geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
country_comparison<-kg_gen_not%>%
filter(Country=="Vietnam"|Country=="United States of America"|Country=="New Zealand"|Country=="United Kingdom"|Country=="Italy"|Country=="South Korea")%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(country_comparison,aes_string(x=input$x,y=input$y,fill="Country")) + geom_col()+ theme_light(base_size = 18)+ geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
country_comparison<-kg_gen_not%>%
filter(Country=="Vietnam"|Country=="United States of America"|Country=="New Zealand"|Country=="United Kingdom"|Country=="Italy"|Country=="Korea,South")%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)
country_comparison<-kg_gen_not%>%
filter(Country=="Vietnam"|Country=="United States of America"|Country=="New Zealand"|Country=="United Kingdom"|Country=="Italy"|Country=="Korea,South")%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)
country_comparison<-kg_gen_not%>%
filter(Country=="Vietnam"|Country=="United States of America"|Country=="New Zealand"|Country=="United Kingdom"|Country=="Italy"|Country=="Korea, South")%>%
summarise(Country,Confirmed,Recovered,Deaths,Obesity,Population,Recovery_to_death_ratio=Recovered/Deaths)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(country_comparison,aes_string(x=input$x,y=input$y,fill="Country")) + geom_col()+ theme_light(base_size = 18)+ geom_smooth(method = lm)
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices = c("Population","Recovered","Obesity","Deaths",'Recovery_to_death_ratio=Recovered/Deaths'),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Population","Recovered","Obesity","Deaths",'Recovery_to_death_ratio=Recovered/Deaths'),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(high_and_low_obesity_recovery,aes_string(x=input$x,y=input$y, color="Country")) + geom_point(size=10)+ theme_light(base_size = 18)+theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(country_comparison,aes_string(x=input$x,y=input$y,fill="Country")) + geom_col()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +)+theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
library(shiny)
ui_1 <- dashboardPage(
dashboardHeader(title = "Test"),
dashboardSidebar(),
dashboardBody(
selectInput("x","Select X variable",choices=c("Country","Population","Recovered","Obesity","Deaths","Recovery_to_death_ratio"),
selected = "Deaths"),
selectInput("y","Select y variable",choices = c("Country","Population","Recovered","Obesity","Deaths", "Recovery_to_death_ratio"),
selected = "Deaths"),
box(title = "Test", width = 10,
plotOutput("plot",width = "1000px",height = "900px")
)
)
)
server_1 <- function(input, output) {
output$plot<-renderPlot({
ggplot(country_comparison,aes_string(x=input$x,y=input$y,fill="Country")) + geom_col()+ theme_light(base_size = 18)+ geom_smooth(method = lm) +theme(legend.position = "bottom",axis.text=element_text(angle = 60,hjust = 1))
})
#session$onSessionEnded(stopApp)
}
shinyApp(ui_1,server_1)
